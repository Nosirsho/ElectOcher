#pragma checksum "C:\Users\Nosirsho\source\repos\ElectOcher\Views\Operator\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "636f1a8c9bd61c386dfd83fc87bee5d4fcb783ca"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Operator_Index), @"mvc.1.0.view", @"/Views/Operator/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Nosirsho\source\repos\ElectOcher\Views\_ViewImports.cshtml"
using ElectrOcher;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nosirsho\source\repos\ElectOcher\Views\_ViewImports.cshtml"
using ElectrOcher.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"636f1a8c9bd61c386dfd83fc87bee5d4fcb783ca", @"/Views/Operator/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"63f1cfa3a7cd8a26a29a3914955870c58a066422", @"/Views/_ViewImports.cshtml")]
    public class Views_Operator_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Nosirsho\source\repos\ElectOcher\Views\Operator\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
    <div class=""container text-center mt-3"">
        <h1>Оператор</h1>    
    <!-- Stack the columns on mobile by making one full-width and the other half-width -->
        <div class=""row alert-light text-center mt-3"">
            <div class=""col-4"">
                <div class=""row text-center mb-1"">
                    <div class=""row"">
                        <h5 class=""text-center"">Вызов посетителей</h5>
                    </div>
                    <div class=""row"">
                        <div class=""col-6"">

                            <button type=""submit"" class=""btn btn-primary"" id=""callButton"">Вызвать</button>
                        </div>
                        <div class=""col-6"">
                            <button type=""submit"" class=""btn btn-primary"" id=""nextButton"">Следующий</button>
                        </div>
                    </div>
                </div>

            </div>
            <div class=""col-8"">
                <div class=""row  alert-primary text-c");
            WriteLiteral(@"enter"">
                    <div id=""served"" ><h2 class=""text-center"" id=""servedNomer"">Вызывается талон</h2></div>
                </div>
                <div class=""row alert-dark"">
                    <div class=""col-6 col-md-4"">Талонов Выдано</div>
                    <div class=""col-6 col-md-4"" id=""t_wait"">Ожидает: <b id=""talonCount""></b></div>
                    <div class=""col-6 col-md-4"">Обслужено</div>
                </div>

                </div>
            </div>

    </div>


    <div class=""text-center mt-5"">
        
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "636f1a8c9bd61c386dfd83fc87bee5d4fcb783ca5060", async() => {
                WriteLiteral("\r\n            \r\n            \r\n            <div class=\"form-group row\">\r\n                <div class=\"col-sm-10\">\r\n                    \r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

        <div id=""notify""><p id=""talonCount""></p></div>
    </div>
    

        <script src=""js/signalr/dist/browser/signalr.min.js""></script>
        <script>
            const hubConnection = new signalR.HubConnectionBuilder()
                .withUrl(""/chat"")
                .build();
            let connectionId = """";
            document.getElementById(""nextButton"")
                .addEventListener(""click"", function (e) {
                    e.preventDefault();

                    const data = new FormData();
                    data.append(""connectionId"", connectionId);

                    fetch(""operator/next"", {
                        method: ""POST"",
                        body: data
                    })
                        .catch(error => console.error(""Error: "", error));
                });
            //Вызов талона
            document.getElementById(""callButton"")
                .addEventListener(""click"", function (e) {
                    e.preventDefault");
            WriteLiteral(@"();

                    const data = new FormData();
                    data.append(""connectionId"", connectionId);

                    fetch(""operator/call"", {
                        method: ""POST"",
                        body: data
                    })
                        .catch(error => console.error(""Error: "", error));
                });

            // получение сообщения количество неослуженных
            hubConnection.on(""TalonCount"", function (message) {

                // меняет сообщения
                let elem = document.getElementById(""talonCount"").textContent = message;
                document.getElementById(""t_wait"").appendChild(elem);

            });

            // получение: Обслуживается талон
            hubConnection.on(""CallTalon"", function (message) {

                // меняет сообщения
                let elem = document.getElementById(""servedNomer"").textContent = message;
                document.getElementById(""served"").appendChild(elem);

");
            WriteLiteral(@"            });


            hubConnection.start().then(() => {
                // после соединения получаем id подключения
                console.log(hubConnection.connectionId);
                connectionId = hubConnection.connectionId;
            });
        </script>


");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
